name: Manage Compute Environments

on:
  workflow_call:
    inputs:
      account:
        description: "Environment to start"
        type: string
        required: true
      platform_env:
        required: true
        type: string
      mode:
        required: true
        type: string

jobs:
  manage-compute:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        AWS_OIDC_ROLE: ${{ vars[format('ACCOUNT_{0}_TF_OIDC_ROLE', inputs.account)] || vars.TF_OIDC_ROLE }}
        AWS_REGION: ${{ vars[format('ACCOUNT_{0}_TF_AWS_REGION', inputs.account)] || vars.TF_AWS_REGION }}
        aws-region: eu-west-1
        
    - name: Manage Compute Environments
      env:
        ENV_NAME: ${{ inputs.platform_env }}
        MODE: ${{ inputs.mode }}
      run: |
        envName=${{ inputs.platform_env }}"
        res=$(aws batch describe-compute-environments --region eu-west-1 | jq -r '.computeEnvironments[] | select(.tags.Environment == "'$ENV_NAME'") | .computeEnvironmentArn')
        
        for b in $res
        do
          if [ "$MODE" = "start" ]; then
            echo "Now enabling compute environment $b ..."
            aws batch update-compute-environment --region eu-west-1 --compute-environment $b --state ENABLED
          elif [ "$MODE" = "stop" ]; then
            echo "Now disabling compute environment $b ..."
            aws batch update-compute-environment --region eu-west-1 --compute-environment $b --state DISABLED
          else
            echo "Invalid value for mode [$MODE]"
            exit 1
          fi
          sleep 2
        done