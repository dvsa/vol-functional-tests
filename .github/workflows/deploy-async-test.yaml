name: ASync Testing Workflow AWS EventBridge

on:
  workflow_dispatch:
    inputs:
      test:
        required: true
        type: choice
        options:
          - async
          - sync
      platform_env:
        type: string
        required: true
      browser_name: 
        type: string
      browser_version: 
        type: string 
      exclude_tags:
        type: string
        required: false
      cucumber_tags:
        type: string
      build_id:
        type: string
      maven_options:
        type: string
        required: false
  workflow_call:
    inputs:
      test:
        required: true
        type: string
        default: 'sync'
      platform_env:
        type: string
        required: true
      browser_name: 
        type: string
      browser_version: 
        type: string 
      exclude_tags:
        type: string
        required: false
      cucumber_tags:
        type: string
      build_id:
        type: string
      maven_options:
        type: string
        required: false
permissions:
  contents: read
  id-token: write

env:
  AWS_OIDC_ROLE: ${{ ( inputs.test == 'async' ) && vars.TF_OIDC_ROLE || vars.TF_OIDC_READONLY_ROLE }}
  AWS_REGION: ${{ vars.TF_AWS_REGION }}
  
jobs:
  run-event-bridge:
    name: run sync test on AWS Batch
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_OIDC_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Execute AWS EventBridge 
        id: create-job
        run: |
          # aws events put-events --entries aws events put-events --entries 
          EVENT_DETAILS='   [ { "Source": "GitHubAction", "Detail": "{ \"runId\": \"${{ inputs.build_id }}\", \"platformEnv\": \"${{ inputs.platform_env }}\", \"browserName\": \"${{ inputs.browser_name }}\", \"browserVersion\": \"${{ inputs.browser_version }}\", \"excludeTags\": \"${{ inputs.exclude_tags }}\", \"cucumberTags\": \"${{ inputs.cucumber_tags }}\" }", "EventBusName": "default", "DetailType": "SeleniumAsyncTest" }]'
          echo $EVENT_DETAILS > entries.json
          aws events put-events --entries file://entries.json

  # upload-batch-report:
  #   name: upload sync report to github
  #   needs: run-sync-batch
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Upload to GitHub
  #       env:
  #         JOB_ID: ${{ needs.run-sync-batch.outputs.job_id }}
  #         BUCKET_NAME: "devapp-olcs-pri-olcs-autotest-s3"
  #         BUCKET_KEY: "vol-functional-tests"
  #       run: |
  #         mkdir -p ./upload/${{ inputs.build_id }}
  #         aws s3api get-object \
  #         --bucket ${{ env.BUCKET_NAME }} \
  #         --key "${{ env.BUCKET_KEY }}/${{ inputs.build_id }}/${{ env.REPORT_NAME }}" \
  #         "./upload/${{ inputs.build_id }}/${{ env.REPORT_NAME }}"
  
  #     - name: Upload Report artefact
  #       id: upload
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ${{ inputs.build_id }}
  #         path: "./upload/${{ inputs.build_id }}/${{ env.REPORT_NAME }}"
    
  #     - name: Job Succeeded
  #       if: success()
  #       run: echo "AWS Batch job completed successfully!"
